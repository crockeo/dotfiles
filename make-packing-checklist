#!/usr/bin/env python3
from __future__ import annotations

import subprocess
from dataclasses import dataclass
from typing import Optional
from urllib.parse import quote
from urllib.parse import urlencode


@dataclass
class Item:
    name: str
    amount: Optional[int] = None
    note: Optional[str] = None

    def render(self) -> str:
        rendered = f"- [ ] {self.name}"
        if self.amount:
            rendered = f"{rendered} (x{self.amount})"
        if self.note:
            rendered = f"{rendered} ({self.note})"
        return rendered


@dataclass
class Section:
    name: str
    items: list[Item]

    def render(self) -> str:
        header = f"- [ ] {self.name}"
        rendered_items = [f"  {item.render()}" for item in self.items]
        return "\n".join(
            [
                header,
                *rendered_items,
            ]
        )


def generate_url(sections: list[Section]) -> str:
    base_url = "things:///add"
    arguments = {
        "title": "Pack",
        "notes": "\n".join(section.render() for section in sections),
    }
    url = f"{base_url}?{urlencode(arguments, quote_via=quote)}"
    return url


PACKING_MANIFEST = [
    Section(
        "Clothes",
        [
            Item("Socks", 7),
            Item("Underwear", 7),
            Item("Shirts", 7),
            Item("Jeans"),
            Item("Blue Shorts"),
            Item("Comfy Pants"),
            Item("Xiaolong Bao Sweater"),
            Item("Bike Sweater"),
            Item("Cleverhood Jacket"),
            Item("Watch"),
            Item("Frog Ring"),
        ],
    ),
    Section(
        "Toiletries",
        [
            Item("Razor"),
            Item("Razor Blades"),
            Item("Shaving Cream"),
            Item("Deodorant"),
            Item("Toothbrush"),
            Item("Hair Product"),
            Item("Facewash", note="Optional"),
            Item("Shampoo", note="Optional"),
            Item("Body Wash", note="Optional"),
            Item("Toothpaste", note="Optional"),
        ],
    ),
    Section(
        "Electronics",
        [
            Item("Laptop"),
            Item("Laptop Charger"),
            Item("Plug Converter", note="Optional"),
            Item("Kindle"),
            Item("Airpods"),
            Item("Plug-in Headphones", note="Optional"),
            Item("USB C to USB A Converter"),
            Item("USB A to Micro USB Cable"),
            Item("USB C to Lightning Cable"),
            Item("Qi Charging Mat"),
        ],
    ),
    Section(
        "Travel Stuff",
        [
            Item("US Passport"),
            Item("EU Passport"),
            Item("Vaccine Card"),
            Item("Masks", amount=4),
            Item("Glasses Case"),
            Item("Contacts"),
        ],
    ),
    Section(
        "Consumables",
        [
            Item("Water Bottle"),
        ],
    ),
    Section(
        "Every Day Carry",
        [
            Item("Phone"),
            Item("Wallet"),
            Item("Keys"),
        ],
    ),
]


def main() -> None:
    url = generate_url(PACKING_MANIFEST)
    subprocess.check_call(("open", url))


if __name__ == "__main__":
    main()
